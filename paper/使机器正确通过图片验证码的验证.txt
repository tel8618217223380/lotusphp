全面的图片验证码破解思路，兼谈LtCaptcha设计哲学

图片验证码的机器破解思路有这么几种情况，我画了个图,参见附件：


但凡机器破解图片验证码，一定是这几种思路的应用和组合，我们只要针对这些破解思路做好防范措施，便可保证我们的图上验证码难以破解。

下面我讲一下各破解思路的适用场景和对应的防范措施：

破解思路1：使用同一个值反复提交
场景举例：验证码图片是十二生肖的照片，问题是“请写出图片中动物的名称”，正确答案是“猫”、“狗”这样的答案。由于其答案是可以枚举的，纵使有成千上万张动物图片，最后也都收敛到12个答案上了，破解程序只要每次都提交“狗”过去，就有十二分之一的几率成功通过验证。破解成功率：8%


破解思路2：穷举验证码字符可能的组合
场景举例：开源程序里常见的4位数字验证码，验证码的位数过短、组成验证码的可选字符太少，如果验证失败允许用户不换图再来一次（这样的程序很少），破解程序只要从0000开始到9999尝试一万次，就一定能成功地破解一次。破解成功率：0.01%

这两种破解思路成功率都很低，但对发广告贴的程序来说，足够了，它们要的不是破解成功率，而是时间成本。

破解思路1和破解思路2的防范措施：
1. 图片验证码校验失败立即重新生成新的验证码，不要重用
2. 使验证码的文字组合种类尽可能多
3. 限制同一用户（根据IP，浏览器等信息区分不同用户）连续出错的次数，超过一定次数则不再验证，直接返回失败

破解思路3：每次都对图片OCR，精确识别验证码文字
这个思路之前讨论的太多了，不再赘述。

破解思路4：人眼识别，建立“图片<->文字”的映射关系，以识别类似（同一）图片
这个思路跟思路3差不多，只不过不是精确识别，而是模糊识别归类，下次碰到类似图片就有可能识别了。不过，一般来说，不能精确OCR的图片也很难通过程序归类。
防范措施：使验证码图片难以被OCR算法归类

破解思路5：反推出key和验证码之间的函数关系
场景举例：像LtCaptcha这样的验证码组件，不把验证码答案写在Session中，而是通过key计算出来，当这各算法足够简单的时候（极端一点，验证码文本就是key），可以被人反推出函数关系的时候，破解程序就可以自己构造这个函数关系，根据key算出验证码文字。LtCaptcha是开源的，算法是公开的，但由于它用私钥加密，破解程序就不可能根据key计算出验证码了.

破解思路6：人眼识别一次，机器多次提交已被正确识别的验证码及key等其它通信内容
场景举例：LtCaptcha，详情参见http://bbs.phpchina.com/thread-168775-3-1.html，21楼。
防范措施：最难被反推的就是没有函数关系。让key和验证码文字之间没有函数关系，例如，验证码文字是随机生成的，放在以key命名的文件中。每次收到验证请求的时候检查该key有没有对应的文件，有才验证，没有直接视为验证失败，验证完了之后删除该key对应的文件――不管验证通过还是失败。

顾名思义，Captcha组件最根本的要求是不能太容易被破解，除此之外，还要考虑
1.容易使用
不需要太多的设置和初始化，最好一两行语句就能让它正常工作起来。
2.不容易被机器OCR，但要容易被人眼识别
3.性能好
不能太慢，kcaptcha和reCaptcha.net的方案就有点点慢了，不适合大网站
4.灵活
模块间耦合度小，不挑环境。不强求用户用Session存储验证码文字，不强求用户通过Cookie传递key（get或者post也可以呀）。用户的运行环境可以不支持Session，甚至可以使用第三方的绘图引擎

LtCaptcha的这些设计原则是Lotus“好用又强大”的哲学的部分具体表现，如果你有兴趣，可以关注其它Lotus组件：
http://www.lotusphp.com
http://lotusphp.googlecode.com